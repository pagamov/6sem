from Factor import Factor
from time import time
from math import exp,sqrt,log10,log

# from lib import GCD,Q,smooth_region,eratosthenes,tonelli

n = 160769357899975610828199539114109518167531134514190990785144666932076614717841
# n = 1250171497372227982026555999675170108947918951378367343470923483104158597216632066586300921566811265776465427395026458151240042366061271512107752586681699923914902061886213022544496783070727061083763996630816279869169194623169255711135422521925444135939014878277515299870536875962948267973899545621728547726545192382593936985574978881305949487523233148677106330650818223443955800622774189936635106363035784698216185461573761714766211607812695281252356674432444279
B = 40000


# HEADER = '\033[95m' # params
# OKBLUE = '\033[94m' # time
# OKCYAN = '\033[96m' # time 2
# OKGREEN = '\033[92m' # progress
# WARNING = '\033[93m'
# FAIL = '\033[91m'
# ENDC = '\033[0m'
# BOLD = '\033[1m'
# UNDERLINE = '\033[4m'


# n = 104729 * 103591
# n = 101 * 973
n = 4398050705407 * 68720001023
# B = long(exp(sqrt(log(n)*log10(log10(n)))))
# B = 10000
# print n
print("B \033[95m"+ str(B)+'\033[0m')

# print tonelli(15347,23)

# exit()

# B = 5000
# n = 977 * 903
# print GCD(abs(-177300-178669),n)
t = time()
res = Factor(n,B)
print("\nans:", res[0], res[1])
print("time:",time() - t, "sec")
